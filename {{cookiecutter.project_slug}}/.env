## API conf vars
OPENAI_API_KEY={{cookiecutter.openai_api_key}}

# FOLLOW-UP question
QA_FOLLOWUP_MODEL=text-davinci-003
QA_FOLLOWUP_TEMPERATURE=0
QA_FOLLOWUP_MAX_TOKENS=200
QA_FOLLOWUP_SIM_THRESHOLD=0.735

# Temp env var - uncomment to disable session conversation, avoiding chat history loading
# QA_NO_CHAT_HISTORY=True

# QA
QA_COMPLETIONS_MODEL=gpt-3.5-turbo
QA_TEMPERATURE=0
QA_MAX_TOKENS=2000

# Embedding
# uncomment to use fake random embedding
# FAKE_EMBEDDING=True

# Access tokens secret - if missing no access token validity is checked
# Generate it with: openssl rand -hex 32
# TOKENS_SECRET=##########################
# comma separated list of valid users - use double quotes!
# TOKENS_USERS="brevia,gustavo"

# Search
# number of documents to return in a vector search
SEARCH_DOCS_NUM=4

# Index creation
TEXT_CHUNK_SIZE=1000
TEXT_CHUNK_OVERLAP=100

# Summarize
SUMM_COMPLETIONS_MODEL=text-davinci-003
SUMM_TEMPERATURE=0
SUMM_TOKENS=1000
SUMM_TOKEN_SPLITTER=3000
SUMM_TOKEN_OVERLAP=0
SUMM_DEFAULT_PROMPT=summarize
SUMM_NUM_ITEMS=5
# respond with a fake summary
# FAKE_SUMMARY=True

# General
VERBOSE_MODE=True
PROMPT_LANG=en

## Tracing - enable only if handler is running!!!
# LANGCHAIN_HANDLER=langchain

## DB vars
PGVECTOR_DRIVER=psycopg2
# host var is used on local development
# but ignored by docker compose
PGVECTOR_HOST={{cookiecutter.postgres_host}}
PGVECTOR_PORT={{cookiecutter.postgres_port}}
PGVECTOR_DATABASE={{cookiecutter.postgres_database}}
PGVECTOR_USER={{cookiecutter.postgres_user}}
PGVECTOR_PASSWORD={{cookiecutter.postgres_password}}
PGVECTOR_POOL_SIZE=10

# used by docker compose only
PGADMIN_DEFAULT_EMAIL=admin@admin.com
PGADMIN_DEFAULT_PASSWORD=admin
PGADMIN_PORT=4000
PGADMIN_VOLUME_NAME=pgadmin-data
PGVECTOR_VOLUME_NAME=pgvector-data
